README for mSQL version 1.0 Beta Patch 5	15 Feb 1995
----------------------------------------------------------------------------


General Info
------------

mSQL has been developed under Sun OS 4.1.1 but has been tested under
Solaris 2.3, Ultrix 4.3, Linux, and OSF/1 (cc not gcc).  That said, it 
should "autoconf" and build on most BSD derived systems, SVR4 based 
systems or POSIX O/S's (that should cover most of them).  It has been
reported that it works out-of-the-box on HP-UX, NeXT, SCO, Sequent,
Cray, Tandem and a few others.  I haven't tested these so buyer beware.


Conscienceware
--------------

mSQL is now being released as "conscienceware".  Please read the file
doc/Conscienceware for an understanding of what it is and how you can
help support the development of mSQL.


Installation
------------

To build mSQL, type "make target" in the top directory.  This will build
a directory where the object files for your system will be made.  This
mechanism allows you to NFS mount the sources onto different machines
and build mSQL on different platforms without having to make copies of 
the sources.  The directory will be under the "targets" directory (e.g.
$(TOP)/targets/Solaris-2.3-Sparc )

Once the target directory has been created, change directory into it and
run "setup".  That will run autoconf and some other configuration
scripts.  Once that has completed, just type make.  You should install
the software with "make install" when you're happy with it.  

The default installation directory is /usr/local/Minerva.  This area is
shared by all the development of Minerva (including the ESL scripting
language and Minerva itself).  It's probably a good idea to leave it as
that rather than /usr/local/msql or similar if you wish to use ESL
(check out doc/Minerva for details on ESL or grab the ESL manual via ftp
from Bond.edu.au in /pub/Minerva/esl )


Testing the software
--------------------

Once it is installed, you can try the sample mSQL script provided in
the msql source directory.  Fire up the server using

	/usr/local/Minerva/bin/msqld&

Create a test database using

	/usr/local/Minerva/bin/msqladmin create test

Run the script through the terminal monitor using

	/usr/local/Minerva/bin/msql test < sample.msql

There are also some further test scripts in the tests directory.  The
"killer" test will produce performance figures about mSQL running on
your machine.  Details such as the number of operations per second for
inserts, fills and selects on both keyed and flat tables is generated.

The most complete test is the regressions test found in test/rtest.  Run
it using 'rtest DBname' where dbname is the name of a database it can
trash.


Notes :
	o  Because this stuff is pretty new, there's a script in the
	scripts directory that you may want to use to run the server.  It
	restarts the server if it crashes and mails you a notification
	of the failure.  It's called run_daemon and may save you some 
	heart ache.

	o  If you run this on a Cray (what?  you don't have a Y-MP at
	home? :) you'll have to remove -lsocket and -lx from EXTRA_LIB 
	in site.mm after you run setup.

	o If you are building this with gcc and see link errors like
	__load.o(.text+0x1a): undefined reference to `mcount'
	edit site.mm and set 'CC=gcc -static'


If you decide to use mSQL for anything, could you drop me a line.  I'd
like to keep track of just how many people are using it and what it's
being used for.  You may also wish to join the mailing list by sending a
message to msql-list-request@Bond.edu.au.


   __                                  David J. Hughes  -  Bambi@Bond.edu.au
  /  \               /  /   /           http://Bond.edu.au/People/bambi.html
 /___/ __   _   ____/  /   / _     
/   \ /  \ / \ /   /  /   / / \  /   Senior Network Programmer, Bond University
\___/ \__//  / \__/   \__/ /  / /    Qld.   4229   AUSTRALIA    (+61 75 951450)
